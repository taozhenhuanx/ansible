---
# k8s 安装前一些基础设置
- name: 设置 hostname
  hostname: name={{ hostname }}

- name: 防止重复执行/etc/hosts文件映射重复，先清空原来的
  shell: echo '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4'> /etc/hosts

- name: 防止重复执行/etc/hosts文件映射重复，先清空原来的
  shell: echo '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6' >> /etc/hosts

- name: 更改 /etc/hosts
  shell: echo {{ item.hostip }} {{ item.hostname }} >> /etc/hosts
  with_items:
    - {hostip: '{{ ip_master01 }}',hostname: '{{ hname_master01 }}'}
    - {hostip: '{{ ip_master02 }}',hostname: '{{ hname_master02 }}'}
    - {hostip: '{{ ip_master03 }}',hostname: '{{ hname_master03 }}'}
    - {hostip: '{{ vip_master_lb }}',hostname: '{{ lbname_master03 }}'}
    - {hostip: '{{ ip_node01 }}',hostname: '{{ hname_node01 }}'}
    - {hostip: '{{ ip_node02 }}',hostname: '{{ hname_node02 }}'}

- name: 删除原来的yum源
  shell: rm -rf /etc/yum.repos.d/*

- name: 更换yum源1
  template: src=CentOS-Base.repo.j2 dest=/etc/yum.repos.d/CentOS-Base.repo

- name: makecache yum源
  shell: yum clean all && yum makecache

- name: 安装常用工具1
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: latest

- name: 更换yum源2
  shell: yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

- name: 添加k8s的yum源
  template: src=kubernetes.repo.j2 dest=/etc/yum.repos.d/kubernetes.repo

- name: 修改CentOS-Base.repo
  shell: sed -i -e '/mirrors.cloud.aliyuncs.com/d' -e '/mirrors.aliyuncs.com/d' /etc/yum.repos.d/CentOS-Base.repo

- name: 安装常用工具2
  yum:
    name:
      - wget
      - lrzsz
      - psmisc
      - vim
      - net-tools
      - telnet
      - git
      - ipvsadm
      - ipset
      - sysstat
      - conntrack
      - ntpdate
    state: latest 

- name: 关闭 firewall
  service:
      name: firewalld
      state: stopped
      enabled: no

- name: 关闭 NetworkManager
  service:
      name: NetworkManager
      state: stopped
      enabled: no

- name: 关闭 selinux
  selinux:
    policy: targeted        
    state:  disabled

- name: 更改时区
  shell: ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

- name: 设置定时任务同步时间1
  shell: echo 'Asia/Shanghai' >/etc/timezone && ntpdate time2.aliyun.com

- name: 设置定时任务同步时间2
  cron:
    name: "update time to aliyum"
    minute: "5"
    job: ntpdate time2.aliyun.com

- name: 优化Linux
  blockinfile:
    dest: /etc/security/limits.conf
    insertafter: EOF
    create: yes
    backup: yes
    block: |
      * soft nofile 655360
      * hard nofile 131072
      * soft nproc 655350
      * hard nproc 655350
      * soft memlock unlimited
      * hard memlock unlimited

- name: update centos7 自带软件包
  shell: yum update -y --exclude=kernel*

- name: reboot
  shell: 'sleep 1 && reboot && sleep 1'
  async: 60
  poll: 0

- block:   # 定义块
  - name: sleep 120s
    shell: 'sleep 60s'
    delegate_to: 127.0.0.1  # 委派任务给本机
    
  - name: check machine live or not 
    shell: ping {{ k8s_all_host_set }} -c 4
    delegate_to: 127.0.0.1  # 委派任务给本机

  # 当上面的块失败时，该关键字(rescue)下面的任务将被执行 
  rescue:  
    - name: sleep 120s
      shell: 'sleep 60s'
      delegate_to: 127.0.0.1  # 委派任务给本机

    - name: check machine live or not
      shell: ping {{ k8s_all_host_set }} -c 4
      delegate_to: 127.0.0.1  # 委派任务给本机

  # always关键字，不管block块是否执行成功，该关键字定义的任务都要被执行。这里是测试而已！
  always:  
    - debug:
        msg: "echo test----"